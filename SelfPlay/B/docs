JChess Engine
Andrew Grant

This revision of the Engine uses a self-defined structure for managing the game board, and a self defined structure for defining and ecoding movement sequences to be used with the board. This document outlines the methods of which the board is defined, as well as the methods of which the moves are defined. This document serves as both a resource to others attempting to understand the code base I have written, and also serves to help myself understand the work that I have done later on in the process. Aside from movement and board definitions, I will also describe the methods of move generation, move authentication, move applicatations, and move reversions. 

Every move is stored as a series of integers stored in an array of length five. Various movement types are defined in different ways, and will be defined below.

	Normal Move : [MoveType,Start,End,CapturedType,CheckBreaks]
	Castle Move : [MoveType,KingStart,KingEnd,RookStart,RookEnd]
	Promotion Move : [MoveType,Start,End,CapturedType,PromoType]
	Enpass Move : [MoveType,Start,End,Enpass,NULL]

	MoveType:
		0 = Normal Move
		1 = Castle Move
		2 = Promotion Move
		3 = Castle Move
		4 = Pawn Double Advance
		
	CheckBreaks:
		1 = Prevents Left Castle
		2 = Prevents Both Castles
		3 = Prevents Right Castle
		
Board structures contain all of the information for defining a particular position on the board, except that of the information needed to determine if stalemates by repitition have been reached. The complete structure of the board is listed below.
		
	
	


