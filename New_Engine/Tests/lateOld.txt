841124

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 47.68      8.54     8.54 51956341     0.00     0.00  validateMove
  9.40     10.23     1.69  5346297     0.00     0.00  createKey
  6.19     11.34     1.11  6027643     0.00     0.00  getAllMoves
  4.88     12.21     0.88  6203818     0.00     0.00  pruneCheckValidations
  4.13     12.96     0.74  5278185     0.00     0.00  getNode
  3.63     13.61     0.65  2382967     0.00     0.00  evaluateMaterial
  3.40     14.21     0.61  5890237     0.00     0.00  getKingMoves
  3.18     14.79     0.57 14384811     0.00     0.00  evaluatePosition
  2.99     15.32     0.54 57401820     0.00     0.00  revertNormalMove
  2.96     15.85     0.53  4761796     0.00     0.00  evaluateMoves
  2.34     16.27     0.42 56325135     0.00     0.00  applyNormalMove
  1.73     16.58     0.31  5633168     0.00     0.00  createHash
  1.62     16.87     0.29 16475957     0.00     0.00  getPawnMoves
  1.42     17.12     0.26 59849137     0.00     0.00  createNormalMove
  1.42     17.38     0.26   103761     0.00     0.17  alphaBetaPrune
  1.40     17.63     0.25  1247798     0.00     0.00  valueSort
  0.61     17.74     0.11  1287644     0.00     0.00  hueristicSort
  0.25     17.79     0.04  1240690     0.00     0.00  fillDirection
  0.14     17.81     0.03   809756     0.00     0.00  storeNode
  0.11     17.83     0.02    59010     0.00     0.00  getQueenMoves
  0.11     17.85     0.02     8338     0.00     0.00  getKnightMoves
  0.11     17.87     0.02        1    20.00    20.00  getNonEmptyBucketCount
  0.06     17.88     0.01  2097152     0.00     0.00  createBucket
  0.06     17.89     0.01  1157779     0.00     0.00  getNodeType
  0.06     17.90     0.01    79672     0.00     0.00  copyBoard
  0.06     17.91     0.01    77700     0.00     0.00  getRookMoves
  0.03     17.91     0.01  2392436     0.00     0.00  evaluateBoard
  0.03     17.92     0.01                             revertCastleMove
  0.00     17.92     0.00   817558     0.00     0.00  createNode
  0.00     17.92     0.00   500915     0.00     0.00  createPromotionMove
  0.00     17.92     0.00   192363     0.00     0.00  revertPromotionMove
  0.00     17.92     0.00   189913     0.00     0.00  applyPromotionMove
  0.00     17.92     0.00    70768     0.00     0.00  getBishopMoves
  0.00     17.92     0.00    19307     0.00     0.00  createEnpassMove
  0.00     17.92     0.00    18414     0.00     0.00  revertEnpassMove
  0.00     17.92     0.00    18289     0.00     0.00  applyEnpassMove
  0.00     17.92     0.00        1     0.00     0.00  buildKnightMap
  0.00     17.92     0.00        1     0.00     0.00  createBoard
  0.00     17.92     0.00        1     0.00    10.00  createTTable
  0.00     17.92     0.00        1     0.00    20.00  endSearch
  0.00     17.92     0.00        1     0.00    40.52  getBestMoveIndex

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 0.06% of 17.92 seconds

index % time    self  children    called     name
                             5352310             alphaBetaPrune [1]
                0.00    0.01      61/103761      getBestMoveIndex [24]
                0.25   17.62  103700/103761      spawnAlphaBetaPruneThread [2]
[1]     99.8    0.26   17.63  103761+5352310 alphaBetaPrune [1]
                0.01   11.06 2392436/2392436     evaluateBoard [4]
                0.24    2.42 1287072/6027643     getAllMoves [3]
                1.69    0.00 5346297/5346297     createKey [11]
                0.11    0.92 1287644/1287644     hueristicSort [12]
                0.74    0.00 5278185/5278185     getNode [13]
                0.31    0.00 5633168/5633168     createHash [18]
                0.05    0.00 5575823/57401820     revertNormalMove [16]
                0.04    0.00 5358269/56325135     applyNormalMove [17]
                0.03    0.00  809756/809756      storeNode [26]
                0.01    0.00 1157779/1157779     getNodeType [31]
                0.01    0.00   79672/79672       copyBoard [32]
                0.00    0.00      12/51956341     validateMove [6]
                0.00    0.00  817558/817558      createNode [37]
                0.00    0.00   40947/192363      revertPromotionMove [38]
                0.00    0.00   38797/189913      applyPromotionMove [39]
                0.00    0.00    7806/18414       revertEnpassMove [40]
                0.00    0.00    7559/18289       applyEnpassMove [41]
                             5352310             alphaBetaPrune [1]
-----------------------------------------------
                                                 <spontaneous>
[2]     99.7    0.00   17.87                 spawnAlphaBetaPruneThread [2]
                0.25   17.62  103700/103761      alphaBetaPrune [1]
-----------------------------------------------
                0.00    0.00       2/6027643     getBestMoveIndex [24]
                0.24    2.42 1287072/6027643     alphaBetaPrune [1]
                0.87    8.92 4740569/6027643     evaluateMoves [5]
[3]     69.5    1.11   11.34 6027643         getAllMoves [3]
                0.61    5.69 5890237/5890237     getKingMoves [8]
                0.29    2.57 16475957/16475957     getPawnMoves [9]
                0.88    1.07 6203818/6203818     pruneCheckValidations [10]
                0.02    0.14   59010/59010       getQueenMoves [20]
                0.00    0.03   19991/77700       getRookMoves [21]
                0.02    0.00    8338/8338        getKnightMoves [27]
                0.00    0.01   14230/70768       getBishopMoves [22]
-----------------------------------------------
                0.01   11.06 2392436/2392436     alphaBetaPrune [1]
[4]     61.8    0.01   11.06 2392436         evaluateBoard [4]
                0.53    9.79 4761796/4761796     evaluateMoves [5]
                0.65    0.00 2382967/2382967     evaluateMaterial [14]
                0.10    0.00 2422602/14384811     evaluatePosition [15]
-----------------------------------------------
                0.53    9.79 4761796/4761796     evaluateBoard [4]
[5]     57.6    0.53    9.79 4761796         evaluateMoves [5]
                0.87    8.92 4740569/6027643     getAllMoves [3]
-----------------------------------------------
                0.00    0.00      12/51956341     alphaBetaPrune [1]
                0.00    0.00    2298/51956341     createEnpassMove [36]
                0.00    0.00   10579/51956341     createPromotionMove [35]
                0.98    0.00 5937663/51956341     getKingMoves [8]
                1.03    0.00 6246934/51956341     pruneCheckValidations [10]
                6.54    0.00 39758855/51956341     createNormalMove [7]
[6]     47.7    8.54    0.00 51956341         validateMove [6]
-----------------------------------------------
                0.00    0.00   34391/59849137     getKnightMoves [27]
                0.00    0.05  426658/59849137     getBishopMoves [22]
                0.00    0.12  976609/59849137     getRookMoves [21]
                0.09    2.48 20586711/59849137     getPawnMoves [9]
                0.16    4.55 37824768/59849137     getKingMoves [8]
[7]     41.6    0.26    7.21 59849137         createNormalMove [7]
                6.54    0.00 39758855/51956341     validateMove [6]
                0.37    0.00 40087641/57401820     revertNormalMove [16]
                0.29    0.00 39254919/56325135     applyNormalMove [17]
-----------------------------------------------
                0.61    5.69 5890237/5890237     getAllMoves [3]
[8]     35.2    0.61    5.69 5890237         getKingMoves [8]
                0.16    4.55 37824768/59849137     createNormalMove [7]
                0.98    0.00 5937663/51956341     validateMove [6]
-----------------------------------------------
                0.29    2.57 16475957/16475957     getAllMoves [3]
[9]     16.0    0.29    2.57 16475957         getPawnMoves [9]
                0.09    2.48 20586711/59849137     createNormalMove [7]
                0.00    0.00  500915/500915      createPromotionMove [35]
                0.00    0.00   19307/19307       createEnpassMove [36]
-----------------------------------------------
                0.88    1.07 6203818/6203818     getAllMoves [3]
[10]    10.9    0.88    1.07 6203818         pruneCheckValidations [10]
                1.03    0.00 6246934/51956341     validateMove [6]
                0.04    0.00 1240690/1240690     fillDirection [23]
-----------------------------------------------
                1.69    0.00 5346297/5346297     alphaBetaPrune [1]
[11]     9.4    1.69    0.00 5346297         createKey [11]
-----------------------------------------------
                0.11    0.92 1287644/1287644     alphaBetaPrune [1]
[12]     5.8    0.11    0.92 1287644         hueristicSort [12]
                0.47    0.00 11962209/14384811     evaluatePosition [15]
                0.25    0.00 1247792/1247798     valueSort [19]
                0.11    0.00 11738356/57401820     revertNormalMove [16]
                0.09    0.00 11711947/56325135     applyNormalMove [17]
                0.00    0.00  140721/192363      revertPromotionMove [38]
                0.00    0.00  140525/189913      applyPromotionMove [39]
                0.00    0.00    8334/18289       applyEnpassMove [41]
                0.00    0.00    8146/18414       revertEnpassMove [40]
-----------------------------------------------
                0.74    0.00 5278185/5278185     alphaBetaPrune [1]
[13]     4.1    0.74    0.00 5278185         getNode [13]
-----------------------------------------------
                0.65    0.00 2382967/2382967     evaluateBoard [4]
[14]     3.6    0.65    0.00 2382967         evaluateMaterial [14]
-----------------------------------------------
                0.10    0.00 2422602/14384811     evaluateBoard [4]
                0.47    0.00 11962209/14384811     hueristicSort [12]
[15]     3.2    0.57    0.00 14384811         evaluatePosition [15]
-----------------------------------------------
                0.05    0.00 5575823/57401820     alphaBetaPrune [1]
                0.11    0.00 11738356/57401820     hueristicSort [12]
                0.37    0.00 40087641/57401820     createNormalMove [7]
[16]     3.0    0.54    0.00 57401820         revertNormalMove [16]
-----------------------------------------------
                0.04    0.00 5358269/56325135     alphaBetaPrune [1]
                0.09    0.00 11711947/56325135     hueristicSort [12]
                0.29    0.00 39254919/56325135     createNormalMove [7]
[17]     2.3    0.42    0.00 56325135         applyNormalMove [17]
-----------------------------------------------
                0.31    0.00 5633168/5633168     alphaBetaPrune [1]
[18]     1.7    0.31    0.00 5633168         createHash [18]
-----------------------------------------------
                0.00    0.00       6/1247798     getBestMoveIndex [24]
                0.25    0.00 1247792/1247798     hueristicSort [12]
[19]     1.4    0.25    0.00 1247798         valueSort [19]
-----------------------------------------------
                0.02    0.14   59010/59010       getAllMoves [3]
[20]     0.9    0.02    0.14   59010         getQueenMoves [20]
                0.01    0.09   57709/77700       getRookMoves [21]
                0.00    0.04   56538/70768       getBishopMoves [22]
-----------------------------------------------
                0.00    0.03   19991/77700       getAllMoves [3]
                0.01    0.09   57709/77700       getQueenMoves [20]
[21]     0.7    0.01    0.12   77700         getRookMoves [21]
                0.00    0.12  976609/59849137     createNormalMove [7]
-----------------------------------------------
                0.00    0.01   14230/70768       getAllMoves [3]
                0.00    0.04   56538/70768       getQueenMoves [20]
[22]     0.3    0.00    0.05   70768         getBishopMoves [22]
                0.00    0.05  426658/59849137     createNormalMove [7]
-----------------------------------------------
                0.04    0.00 1240690/1240690     pruneCheckValidations [10]
[23]     0.3    0.04    0.00 1240690         fillDirection [23]
-----------------------------------------------
                0.00    0.04       1/1           main [25]
[24]     0.2    0.00    0.04       1         getBestMoveIndex [24]
                0.00    0.02       1/1           endSearch [28]
                0.00    0.01      61/103761      alphaBetaPrune [1]
                0.00    0.01       1/1           createTTable [33]
                0.00    0.00       2/6027643     getAllMoves [3]
                0.00    0.00       6/1247798     valueSort [19]
-----------------------------------------------
                                                 <spontaneous>
[25]     0.2    0.00    0.04                 main [25]
                0.00    0.04       1/1           getBestMoveIndex [24]
                0.00    0.00       1/1           createBoard [43]
-----------------------------------------------
                0.03    0.00  809756/809756      alphaBetaPrune [1]
[26]     0.1    0.03    0.00  809756         storeNode [26]
-----------------------------------------------
                0.02    0.00    8338/8338        getAllMoves [3]
[27]     0.1    0.02    0.00    8338         getKnightMoves [27]
                0.00    0.00   34391/59849137     createNormalMove [7]
-----------------------------------------------
                0.00    0.02       1/1           getBestMoveIndex [24]
[28]     0.1    0.00    0.02       1         endSearch [28]
                0.02    0.00       1/1           getNonEmptyBucketCount [29]
-----------------------------------------------
                0.02    0.00       1/1           endSearch [28]
[29]     0.1    0.02    0.00       1         getNonEmptyBucketCount [29]
-----------------------------------------------
                0.01    0.00 2097152/2097152     createTTable [33]
[30]     0.1    0.01    0.00 2097152         createBucket [30]
-----------------------------------------------
                0.01    0.00 1157779/1157779     alphaBetaPrune [1]
[31]     0.1    0.01    0.00 1157779         getNodeType [31]
-----------------------------------------------
                0.01    0.00   79672/79672       alphaBetaPrune [1]
[32]     0.1    0.01    0.00   79672         copyBoard [32]
-----------------------------------------------
                0.00    0.01       1/1           getBestMoveIndex [24]
[33]     0.1    0.00    0.01       1         createTTable [33]
                0.01    0.00 2097152/2097152     createBucket [30]
-----------------------------------------------
                                                 <spontaneous>
[34]     0.0    0.01    0.00                 revertCastleMove [34]
-----------------------------------------------
                0.00    0.00  500915/500915      getPawnMoves [9]
[35]     0.0    0.00    0.00  500915         createPromotionMove [35]
                0.00    0.00   10579/51956341     validateMove [6]
                0.00    0.00   10695/192363      revertPromotionMove [38]
                0.00    0.00   10591/189913      applyPromotionMove [39]
-----------------------------------------------
                0.00    0.00   19307/19307       getPawnMoves [9]
[36]     0.0    0.00    0.00   19307         createEnpassMove [36]
                0.00    0.00    2298/51956341     validateMove [6]
                0.00    0.00    2462/18414       revertEnpassMove [40]
                0.00    0.00    2396/18289       applyEnpassMove [41]
-----------------------------------------------
                0.00    0.00  817558/817558      alphaBetaPrune [1]
[37]     0.0    0.00    0.00  817558         createNode [37]
-----------------------------------------------
                0.00    0.00   10695/192363      createPromotionMove [35]
                0.00    0.00   40947/192363      alphaBetaPrune [1]
                0.00    0.00  140721/192363      hueristicSort [12]
[38]     0.0    0.00    0.00  192363         revertPromotionMove [38]
-----------------------------------------------
                0.00    0.00   10591/189913      createPromotionMove [35]
                0.00    0.00   38797/189913      alphaBetaPrune [1]
                0.00    0.00  140525/189913      hueristicSort [12]
[39]     0.0    0.00    0.00  189913         applyPromotionMove [39]
-----------------------------------------------
                0.00    0.00    2462/18414       createEnpassMove [36]
                0.00    0.00    7806/18414       alphaBetaPrune [1]
                0.00    0.00    8146/18414       hueristicSort [12]
[40]     0.0    0.00    0.00   18414         revertEnpassMove [40]
-----------------------------------------------
                0.00    0.00    2396/18289       createEnpassMove [36]
                0.00    0.00    7559/18289       alphaBetaPrune [1]
                0.00    0.00    8334/18289       hueristicSort [12]
[41]     0.0    0.00    0.00   18289         applyEnpassMove [41]
-----------------------------------------------
                0.00    0.00       1/1           createBoard [43]
[42]     0.0    0.00    0.00       1         buildKnightMap [42]
-----------------------------------------------
                0.00    0.00       1/1           main [25]
[43]     0.0    0.00    0.00       1         createBoard [43]
                0.00    0.00       1/1           buildKnightMap [42]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

   [1] alphaBetaPrune         [33] createTTable           [29] getNonEmptyBucketCount
  [41] applyEnpassMove        [28] endSearch               [9] getPawnMoves
  [17] applyNormalMove         [4] evaluateBoard          [20] getQueenMoves
  [39] applyPromotionMove     [14] evaluateMaterial       [21] getRookMoves
  [42] buildKnightMap          [5] evaluateMoves          [12] hueristicSort
  [32] copyBoard              [15] evaluatePosition       [10] pruneCheckValidations
  [43] createBoard            [23] fillDirection          [34] revertCastleMove
  [30] createBucket            [3] getAllMoves            [40] revertEnpassMove
  [36] createEnpassMove       [24] getBestMoveIndex       [16] revertNormalMove
  [18] createHash             [22] getBishopMoves         [38] revertPromotionMove
  [11] createKey               [8] getKingMoves           [26] storeNode
  [37] createNode             [27] getKnightMoves          [6] validateMove
   [7] createNormalMove       [13] getNode                [19] valueSort
  [35] createPromotionMove    [31] getNodeType
