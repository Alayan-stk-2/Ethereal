1753978

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 23.19      3.97     3.97 58533743     0.00     0.00  validateMove
 14.89      6.52     2.55  6099243     0.00     0.00  createKey
 10.22      8.27     1.75  6859740     0.00     0.00  getAllMoves
  7.56      9.56     1.29  7116031     0.00     0.00  pruneCheckValidations
  5.32     10.47     0.91  5931362     0.00     0.00  getNode
  5.23     11.37     0.90 16446438     0.00     0.00  evaluatePosition
  4.94     12.21     0.84  5443230     0.00     0.00  evaluateMoves
  4.67     13.02     0.80  6722439     0.00     0.00  getKingMoves
  4.53     13.79     0.78 64962909     0.00     0.00  applyNormalMove
  4.32     14.53     0.74  2718833     0.00     0.00  evaluateMaterial
  3.74     15.17     0.64 63882598     0.00     0.00  revertNormalMove
  2.16     15.54     0.37 18452072     0.00     0.00  getPawnMoves
  2.07     15.89     0.35 68747646     0.00     0.00  createNormalMove
  1.99     16.23     0.34  6378187     0.00     0.00  createHash
  1.64     16.52     0.28  1412715     0.00     0.00  valueSort
  0.93     16.68     0.16   119651     0.00     0.14  alphaBetaPrune
  0.58     16.77     0.10  1476683     0.00     0.00  hueristicSort
  0.50     16.86     0.09  1457229     0.00     0.00  fillDirection
  0.29     16.91     0.05   873121     0.00     0.00  storeNode
  0.18     16.94     0.03  2097152     0.00     0.00  createBucket
  0.12     16.96     0.02   216244     0.00     0.00  applyPromotionMove
  0.12     16.98     0.02        1    20.00    50.00  createTTable
  0.12     17.00     0.02        1    20.00    20.00  getNonEmptyBucketCount
  0.09     17.02     0.01    80012     0.00     0.00  getQueenMoves
  0.06     17.02     0.01  2733078     0.00     0.00  evaluateBoard
  0.06     17.04     0.01  1281060     0.00     0.00  getNodeType
  0.06     17.05     0.01   894500     0.00     0.00  createNode
  0.06     17.05     0.01   217096     0.00     0.00  revertPromotionMove
  0.06     17.07     0.01    97778     0.00     0.00  getRookMoves
  0.06     17.07     0.01    17522     0.00     0.00  applyEnpassMove
  0.06     17.09     0.01     7536     0.00     0.00  getKnightMoves
  0.06     17.09     0.01                             applyCastleMove
  0.06     17.11     0.01                             createCastleMove
  0.06     17.11     0.01                             revertCastleMove
  0.03     17.12     0.01    21408     0.00     0.00  createEnpassMove
  0.00     17.12     0.00   666279     0.00     0.00  createPromotionMove
  0.00     17.12     0.00    97248     0.00     0.00  copyBoard
  0.00     17.12     0.00    91526     0.00     0.00  getBishopMoves
  0.00     17.12     0.00    17768     0.00     0.00  revertEnpassMove
  0.00     17.12     0.00        1     0.00     0.00  buildKnightMap
  0.00     17.12     0.00        1     0.00     0.00  createBoard
  0.00     17.12     0.00        1     0.00    20.00  endSearch
  0.00     17.12     0.00        1     0.00    78.68  getBestMoveIndex

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 0.06% of 17.12 seconds

index % time    self  children    called     name
                             6033811             alphaBetaPrune [1]
                0.00    0.01      61/119651      getBestMoveIndex [23]
                0.16   16.85  119590/119651      spawnAlphaBetaPruneThread [2]
[1]     99.4    0.16   16.86  119651+6033811 alphaBetaPrune [1]
                0.01    9.31 2733078/2733078     evaluateBoard [4]
                2.55    0.00 6099243/6099243     createKey [9]
                0.38    1.70 1477636/6859740     getAllMoves [3]
                0.10    1.35 1476683/1476683     hueristicSort [12]
                0.91    0.00 5931362/5931362     getNode [13]
                0.34    0.00 6378187/6378187     createHash [18]
                0.07    0.00 6088522/64962909     applyNormalMove [15]
                0.06    0.00 6356686/63882598     revertNormalMove [17]
                0.05    0.00  873121/873121      storeNode [25]
                0.01    0.00 1281060/1281060     getNodeType [33]
                0.01    0.00  894500/894500      createNode [34]
                0.00    0.00   41897/216244      applyPromotionMove [31]
                0.00    0.00    6647/17522       applyEnpassMove [36]
                0.00    0.00   44074/217096      revertPromotionMove [35]
                0.00    0.00      10/58533743     validateMove [8]
                0.00    0.00   97248/97248       copyBoard [42]
                0.00    0.00    6923/17768       revertEnpassMove [43]
                             6033811             alphaBetaPrune [1]
-----------------------------------------------
                                                 <spontaneous>
[2]     99.4    0.00   17.01                 spawnAlphaBetaPruneThread [2]
                0.16   16.85  119590/119651      alphaBetaPrune [1]
-----------------------------------------------
                0.00    0.00       2/6859740     getBestMoveIndex [23]
                0.38    1.70 1477636/6859740     alphaBetaPrune [1]
                1.37    6.20 5382102/6859740     evaluateMoves [5]
[3]     56.4    1.75    7.90 6859740         getAllMoves [3]
                0.80    3.20 6722439/6722439     getKingMoves [7]
                0.37    1.51 18452072/18452072     getPawnMoves [10]
                1.29    0.57 7116031/7116031     pruneCheckValidations [11]
                0.01    0.10   80012/80012       getQueenMoves [20]
                0.00    0.02   19239/97778       getRookMoves [21]
                0.01    0.00    7536/7536        getKnightMoves [32]
                0.00    0.01   13254/91526       getBishopMoves [27]
-----------------------------------------------
                0.01    9.31 2733078/2733078     alphaBetaPrune [1]
[4]     54.4    0.01    9.31 2733078         evaluateBoard [4]
                0.84    7.57 5443230/5443230     evaluateMoves [5]
                0.74    0.00 2718833/2718833     evaluateMaterial [16]
                0.15    0.00 2752180/16446438     evaluatePosition [14]
-----------------------------------------------
                0.84    7.57 5443230/5443230     evaluateBoard [4]
[5]     49.2    0.84    7.57 5443230         evaluateMoves [5]
                1.37    6.20 5382102/6859740     getAllMoves [3]
-----------------------------------------------
                0.00    0.00   30631/68747646     getKnightMoves [32]
                0.00    0.03  558620/68747646     getBishopMoves [27]
                0.01    0.07 1248881/68747646     getRookMoves [21]
                0.12    1.38 23611409/68747646     getPawnMoves [10]
                0.22    2.53 43298105/68747646     getKingMoves [7]
[6]     25.5    0.35    4.01 68747646         createNormalMove [6]
                3.03    0.00 44697361/58533743     validateMove [8]
                0.54    0.00 45347650/64962909     applyNormalMove [15]
                0.44    0.00 43954128/63882598     revertNormalMove [17]
-----------------------------------------------
                0.80    3.20 6722439/6722439     getAllMoves [3]
[7]     23.4    0.80    3.20 6722439         getKingMoves [7]
                0.22    2.53 43298105/68747646     createNormalMove [6]
                0.45    0.00 6612153/58533743     validateMove [8]
-----------------------------------------------
                0.00    0.00      10/58533743     alphaBetaPrune [1]
                0.00    0.00    3192/58533743     createEnpassMove [40]
                0.00    0.00   16127/58533743     createPromotionMove [41]
                0.45    0.00 6612153/58533743     getKingMoves [7]
                0.49    0.00 7204900/58533743     pruneCheckValidations [11]
                3.03    0.00 44697361/58533743     createNormalMove [6]
[8]     23.2    3.97    0.00 58533743         validateMove [8]
-----------------------------------------------
                2.55    0.00 6099243/6099243     alphaBetaPrune [1]
[9]     14.9    2.55    0.00 6099243         createKey [9]
-----------------------------------------------
                0.37    1.51 18452072/18452072     getAllMoves [3]
[10]    11.0    0.37    1.51 18452072         getPawnMoves [10]
                0.12    1.38 23611409/68747646     createNormalMove [6]
                0.00    0.00   21408/21408       createEnpassMove [40]
                0.00    0.00  666279/666279      createPromotionMove [41]
-----------------------------------------------
                1.29    0.57 7116031/7116031     getAllMoves [3]
[11]    10.9    1.29    0.57 7116031         pruneCheckValidations [11]
                0.49    0.00 7204900/58533743     validateMove [8]
                0.08    0.00 1457229/1457229     fillDirection [22]
-----------------------------------------------
                0.10    1.35 1476683/1476683     alphaBetaPrune [1]
[12]     8.5    0.10    1.35 1476683         hueristicSort [12]
                0.75    0.00 13694258/16446438     evaluatePosition [14]
                0.28    0.00 1412709/1412715     valueSort [19]
                0.16    0.00 13526737/64962909     applyNormalMove [15]
                0.14    0.00 13571784/63882598     revertNormalMove [17]
                0.01    0.00  158506/216244      applyPromotionMove [31]
                0.01    0.00  157331/217096      revertPromotionMove [35]
                0.00    0.00    7706/17522       applyEnpassMove [36]
                0.00    0.00    7606/17768       revertEnpassMove [43]
-----------------------------------------------
                0.91    0.00 5931362/5931362     alphaBetaPrune [1]
[13]     5.3    0.91    0.00 5931362         getNode [13]
-----------------------------------------------
                0.15    0.00 2752180/16446438     evaluateBoard [4]
                0.75    0.00 13694258/16446438     hueristicSort [12]
[14]     5.2    0.90    0.00 16446438         evaluatePosition [14]
-----------------------------------------------
                0.07    0.00 6088522/64962909     alphaBetaPrune [1]
                0.16    0.00 13526737/64962909     hueristicSort [12]
                0.54    0.00 45347650/64962909     createNormalMove [6]
[15]     4.5    0.77    0.00 64962909         applyNormalMove [15]
-----------------------------------------------
                0.74    0.00 2718833/2718833     evaluateBoard [4]
[16]     4.3    0.74    0.00 2718833         evaluateMaterial [16]
-----------------------------------------------
                0.06    0.00 6356686/63882598     alphaBetaPrune [1]
                0.14    0.00 13571784/63882598     hueristicSort [12]
                0.44    0.00 43954128/63882598     createNormalMove [6]
[17]     3.7    0.64    0.00 63882598         revertNormalMove [17]
-----------------------------------------------
                0.34    0.00 6378187/6378187     alphaBetaPrune [1]
[18]     2.0    0.34    0.00 6378187         createHash [18]
-----------------------------------------------
                0.00    0.00       6/1412715     getBestMoveIndex [23]
                0.28    0.00 1412709/1412715     hueristicSort [12]
[19]     1.6    0.28    0.00 1412715         valueSort [19]
-----------------------------------------------
                0.01    0.10   80012/80012       getAllMoves [3]
[20]     0.7    0.01    0.10   80012         getQueenMoves [20]
                0.01    0.06   78539/97778       getRookMoves [21]
                0.00    0.03   78272/91526       getBishopMoves [27]
-----------------------------------------------
                0.00    0.02   19239/97778       getAllMoves [3]
                0.01    0.06   78539/97778       getQueenMoves [20]
[21]     0.5    0.01    0.08   97778         getRookMoves [21]
                0.01    0.07 1248881/68747646     createNormalMove [6]
-----------------------------------------------
                0.08    0.00 1457229/1457229     pruneCheckValidations [11]
[22]     0.5    0.08    0.00 1457229         fillDirection [22]
-----------------------------------------------
                0.00    0.08       1/1           main [24]
[23]     0.5    0.00    0.08       1         getBestMoveIndex [23]
                0.02    0.03       1/1           createTTable [26]
                0.00    0.02       1/1           endSearch [29]
                0.00    0.01      61/119651      alphaBetaPrune [1]
                0.00    0.00       2/6859740     getAllMoves [3]
                0.00    0.00       6/1412715     valueSort [19]
-----------------------------------------------
                                                 <spontaneous>
[24]     0.5    0.00    0.08                 main [24]
                0.00    0.08       1/1           getBestMoveIndex [23]
                0.00    0.00       1/1           createBoard [45]
-----------------------------------------------
                0.05    0.00  873121/873121      alphaBetaPrune [1]
[25]     0.3    0.05    0.00  873121         storeNode [25]
-----------------------------------------------
                0.02    0.03       1/1           getBestMoveIndex [23]
[26]     0.3    0.02    0.03       1         createTTable [26]
                0.03    0.00 2097152/2097152     createBucket [28]
-----------------------------------------------
                0.00    0.01   13254/91526       getAllMoves [3]
                0.00    0.03   78272/91526       getQueenMoves [20]
[27]     0.2    0.00    0.04   91526         getBishopMoves [27]
                0.00    0.03  558620/68747646     createNormalMove [6]
-----------------------------------------------
                0.03    0.00 2097152/2097152     createTTable [26]
[28]     0.2    0.03    0.00 2097152         createBucket [28]
-----------------------------------------------
                0.00    0.02       1/1           getBestMoveIndex [23]
[29]     0.1    0.00    0.02       1         endSearch [29]
                0.02    0.00       1/1           getNonEmptyBucketCount [30]
-----------------------------------------------
                0.02    0.00       1/1           endSearch [29]
[30]     0.1    0.02    0.00       1         getNonEmptyBucketCount [30]
-----------------------------------------------
                0.00    0.00   15841/216244      createPromotionMove [41]
                0.00    0.00   41897/216244      alphaBetaPrune [1]
                0.01    0.00  158506/216244      hueristicSort [12]
[31]     0.1    0.02    0.00  216244         applyPromotionMove [31]
-----------------------------------------------
                0.01    0.00    7536/7536        getAllMoves [3]
[32]     0.1    0.01    0.00    7536         getKnightMoves [32]
                0.00    0.00   30631/68747646     createNormalMove [6]
-----------------------------------------------
                0.01    0.00 1281060/1281060     alphaBetaPrune [1]
[33]     0.1    0.01    0.00 1281060         getNodeType [33]
-----------------------------------------------
                0.01    0.00  894500/894500      alphaBetaPrune [1]
[34]     0.1    0.01    0.00  894500         createNode [34]
-----------------------------------------------
                0.00    0.00   15691/217096      createPromotionMove [41]
                0.00    0.00   44074/217096      alphaBetaPrune [1]
                0.01    0.00  157331/217096      hueristicSort [12]
[35]     0.1    0.01    0.00  217096         revertPromotionMove [35]
-----------------------------------------------
                0.00    0.00    3169/17522       createEnpassMove [40]
                0.00    0.00    6647/17522       alphaBetaPrune [1]
                0.00    0.00    7706/17522       hueristicSort [12]
[36]     0.1    0.01    0.00   17522         applyEnpassMove [36]
-----------------------------------------------
                                                 <spontaneous>
[37]     0.1    0.01    0.00                 applyCastleMove [37]
-----------------------------------------------
                                                 <spontaneous>
[38]     0.1    0.01    0.00                 createCastleMove [38]
-----------------------------------------------
                                                 <spontaneous>
[39]     0.1    0.01    0.00                 revertCastleMove [39]
-----------------------------------------------
                0.00    0.00   21408/21408       getPawnMoves [10]
[40]     0.0    0.00    0.00   21408         createEnpassMove [40]
                0.00    0.00    3169/17522       applyEnpassMove [36]
                0.00    0.00    3192/58533743     validateMove [8]
                0.00    0.00    3239/17768       revertEnpassMove [43]
-----------------------------------------------
                0.00    0.00  666279/666279      getPawnMoves [10]
[41]     0.0    0.00    0.00  666279         createPromotionMove [41]
                0.00    0.00   15841/216244      applyPromotionMove [31]
                0.00    0.00   16127/58533743     validateMove [8]
                0.00    0.00   15691/217096      revertPromotionMove [35]
-----------------------------------------------
                0.00    0.00   97248/97248       alphaBetaPrune [1]
[42]     0.0    0.00    0.00   97248         copyBoard [42]
-----------------------------------------------
                0.00    0.00    3239/17768       createEnpassMove [40]
                0.00    0.00    6923/17768       alphaBetaPrune [1]
                0.00    0.00    7606/17768       hueristicSort [12]
[43]     0.0    0.00    0.00   17768         revertEnpassMove [43]
-----------------------------------------------
                0.00    0.00       1/1           createBoard [45]
[44]     0.0    0.00    0.00       1         buildKnightMap [44]
-----------------------------------------------
                0.00    0.00       1/1           main [24]
[45]     0.0    0.00    0.00       1         createBoard [45]
                0.00    0.00       1/1           buildKnightMap [44]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

   [1] alphaBetaPrune         [41] createPromotionMove    [30] getNonEmptyBucketCount
  [37] applyCastleMove        [26] createTTable           [10] getPawnMoves
  [36] applyEnpassMove        [29] endSearch              [20] getQueenMoves
  [15] applyNormalMove         [4] evaluateBoard          [21] getRookMoves
  [31] applyPromotionMove     [16] evaluateMaterial       [12] hueristicSort
  [44] buildKnightMap          [5] evaluateMoves          [11] pruneCheckValidations
  [42] copyBoard              [14] evaluatePosition       [39] revertCastleMove
  [45] createBoard            [22] fillDirection          [43] revertEnpassMove
  [28] createBucket            [3] getAllMoves            [17] revertNormalMove
  [38] createCastleMove       [23] getBestMoveIndex       [35] revertPromotionMove
  [40] createEnpassMove       [27] getBishopMoves         [25] storeNode
  [18] createHash              [7] getKingMoves            [8] validateMove
   [9] createKey              [32] getKnightMoves         [19] valueSort
  [34] createNode             [13] getNode
   [6] createNormalMove       [33] getNodeType
